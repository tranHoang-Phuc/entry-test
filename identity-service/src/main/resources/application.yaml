spring:
  application:
    name: identity-service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}

  data:
    redis:
      host: localhost
      port: ${SPRING_DATA_REDIS_PORT}

  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: identity-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

kafka:
  topic:
    user-verification: user-verification-topic
    user-creation: user-creation-topic
    reset-password: reset-password-topic
    block-user: block-user-topic

server:
  port: 8090
  servlet:
    context-path: /identity

springdoc:
  paths-to-match: /**
  packages-to-scan: com.dts.entry.identityservice.controller
  swagger-ui:
    path: /swagger-ui
    oauth:
      use-pkce-with-authorization-code-grant: true
      client-id: swagger-ui

jwt:
  signerKey: ${JWT_SECRET}
  valid-duration: 3600
  refreshable-duration: 36000
  issuer: ${JWT_ISSUER}

admin:
  username: ${ADMIN_USERNAME}
  password: ${ADMIN_PASSWORD}

rate-limiter:
  max-attempts: 5
  block-duration: 3600

client:
  domain: ${CLIENT_DOMAIN}

internal:
  secret: 1234567

